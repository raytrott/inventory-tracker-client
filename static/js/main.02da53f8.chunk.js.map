{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.js","components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","components/Inventory/Inventories.js","api/inventory.js","components/Inventory/InvForm.js","components/Inventory/NewInventory.js","components/Inventory/Inventory.js","components/Inventory/InventoryEdit.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","AutoDismissAlert","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","message","deleteAlert","id","Alert","dismissible","onClose","className","Heading","React","authenticatedOptions","unauthenticatedOptions","alwaysOptions","exact","Header","Navbar","bg","expand","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signIn","credentials","axios","url","method","data","password","SignUp","handleChange","event","target","name","value","onSignUp","preventDefault","msgAlert","history","setUser","password_confirmation","passwordConfirmation","then","res","push","catch","error","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","Button","withRouter","SignIn","onSignIn","SignOut","clearUser","headers","Authorization","token","signOut","finally","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","useState","inventories","setInventories","useEffect","index","console","log","length","inventoriesJSX","map","inventory","_id","InvForm","itemName","itemQuant","handleSubmit","handleChangeName","handleChangeItems","cancelPath","NewInventory","items","quantity","owner","createdInvId","Inventory","handleClick","match","params","deleted","loading","itemNameJSX","item","itemQuantJSX","onClick","InventoryEdit","created","App","msgAlerts","filter","msg","uuid","path","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.02da53f8.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n// props will include a `user` object or empty object\n// props will include a `component` as `Component` or a `render`\n// all other props that may be passed in are `..rest`\nconst AuthenticatedRoute = ({\n  user,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />\n\n    // if props include a `user` object but no `render` then create route with `Component`\n    // if props do not include a `user` object then redirect to home\n  } else {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          user ? <Component {...props} /> : <Redirect to='/' />\n        }\n      />\n    )\n  }\n}\n\nexport default AuthenticatedRoute\n","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nimport './AutoDismissAlert.scss'\n\nclass AutoDismissAlert extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      show: true\n    }\n    this.timeoutId = null\n  }\n\n  componentDidMount () {\n    this.timeoutId = setTimeout(this.handleClose, 5000)\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeoutId)\n  }\n\nhandleClose = () => this.setState({ show: false })\n\nrender () {\n  const { variant, heading, message, deleteAlert, id } = this.props\n\n  // Delete this alert after the fade animation time (300 ms by default)\n  if (!this.state.show) {\n    setTimeout(() => {\n      deleteAlert(id)\n    }, 300)\n  }\n\n  return (\n    <Alert\n      dismissible\n      show={this.state.show}\n      variant={variant}\n      onClose={this.handleClose}>\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n}\n\nexport default AutoDismissAlert\n","import React, { Fragment } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { Link, NavLink } from 'react-router-dom'\n\nconst authenticatedOptions = (\n  <Fragment>\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\n  </Fragment>\n)\n\nconst unauthenticatedOptions = (\n  <Fragment>\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  </Fragment>\n)\n\nconst alwaysOptions = (\n  <Fragment>\n    <NavLink exact to='/' className='nav-link'>Home</NavLink>\n  </Fragment>\n)\n\nconst Header = ({ user }) => (\n  <Navbar bg='primary' variant='dark' expand='md'>\n    <Navbar.Brand>\n      <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>iGot Inventory Tracker</Link>\n    </Navbar.Brand>\n    <Navbar.Toggle aria-controls='basic-navbar-nav' />\n    <Navbar.Collapse id='basic-navbar-nav'>\n      <Nav className='ml-auto'>\n        {user && (\n          <span className='navbar-text mr-2'>Welcome, {user.email}</span>\n        )}\n        {alwaysOptions}\n        {user ? authenticatedOptions : unauthenticatedOptions}\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://fast-forest-28405.herokuapp.com/',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (credentials) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up/',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  })\n}\n\nexport const signIn = (credentials) => {\n  return axios({\n    url: apiUrl + '/sign-in/',\n    method: 'POST',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }\n  })\n}\n\nexport const signOut = (user) => {\n  return axios({\n    url: apiUrl + '/sign-out/',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-password/',\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignUp extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: '',\n      passwordConfirmation: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignUp = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signUp(this.state)\n    .then(() => signIn(this.state))\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '', passwordConfirmation: '' })\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password, passwordConfirmation } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={this.onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignUp)\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignIn extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignIn = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signIn(this.state)\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '' })\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={this.onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignIn)\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nclass SignOut extends Component {\n  componentDidMount () {\n    const { msgAlert, history, clearUser, user } = this.props\n\n    signOut(user)\n      .finally(() =>\n        msgAlert({\n          heading: 'Signed Out Successfully',\n          message: signOutSuccess,\n          variant: 'success'\n        })\n      )\n      .finally(() => history.push('/'))\n      .finally(() => clearUser())\n  }\n\n  render () {\n    return ''\n  }\n}\n\nexport default withRouter(SignOut)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass ChangePassword extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      oldPassword: '',\n      newPassword: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonChangePassword = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, user } = this.props\n\n  changePassword(this.state, user)\n    .then(() =>\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ oldPassword: '', newPassword: '' })\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { oldPassword, newPassword } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={this.onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(ChangePassword)\n","import React, { useState, useEffect } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\n\nimport { index } from '../../api/inventory'\n\nconst Inventories = ({ user }) => {\n  const [inventories, setInventories] = useState([])\n\n  useEffect(() => {\n    index(user)\n      .then((res) => setInventories(res.data))\n      .catch((error) => {\n        console.log(error)\n      })\n  }, []\n  )\n\n  if (inventories.length < 1) {\n    return (\n      <div className='row'>\n        <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n          <h1>Welcome!</h1>\n          <h3>Create an inventory list by clicking the button below!</h3>\n          <Link to='/new-inventory'><button>Add New Inventory</button></Link>\n        </div>\n      </div>\n    )\n  } else {\n    const inventoriesJSX = inventories.inventories.map((inventory) => (\n      <>\n        <li key={inventory._id}><Link to={'/inventories/' + inventory._id} user={user}>{inventory.name}</Link></li>\n      </>\n    ))\n\n    return (\n      <div className='row'>\n        <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n          <h1>My Inventories</h1>\n          <Link to='/new-inventory'><button>Add New Inventory</button></Link>\n          <h5>{inventoriesJSX}</h5>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Inventories)\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const index = (user) => {\n  return axios({\n    url: apiUrl + '/inventories',\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst InvForm = ({ name, itemName, itemQuant, handleSubmit, handleChangeName, handleChangeItems, cancelPath }) => (\n  <form onSubmit={handleSubmit}>\n    <label>Name</label>\n    <input\n      placeholder=\"Household Goods\"\n      value={name}\n      name=\"name\"\n      onChange={handleChangeName}\n    /><br></br>\n\n    <label>Item Name</label>\n    <input\n      placeholder=\"Bedframe\"\n      value={itemName}\n      name=\"itemName\"\n      onChange={handleChangeItems}\n    />\n\n    <label>Item Quantity</label>\n    <input\n      placeholder=\"0\"\n      value={itemQuant}\n      name=\"itemQuant\"\n      onChange={handleChangeItems}\n    />\n\n    <button type=\"submit\">Submit</button>\n    <Link to={cancelPath}>\n      <button>Cancel</button>\n    </Link>\n  </form>\n)\n\nexport default InvForm\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios'\n\nimport apiUrl from '../../apiConfig'\nimport InvForm from './InvForm'\n\nclass NewInventory extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      name: '',\n      itemName: '',\n      itemQuant: '',\n      createdInvId: null,\n      user: props.user\n    }\n  }\n\n  handleChangeName = event => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  handleChangeItems = event => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    console.log(event)\n    console.log(this.state.name)\n    console.log(this.state.itemQuant)\n    console.log(this.state.user)\n    axios({\n      url: `${apiUrl}/inventories`,\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${this.state.user.token}`\n      },\n      data: {\n        inventory: {\n          name: this.state.name,\n          items: [{\n            name: this.state.itemName,\n            quantity: this.state.itemQuant,\n            owner: this.state.user._id\n          }]\n        }\n      }\n    })\n      .then(res => this.setState({ createdInvId: res.data.inventory._id }))\n      .catch(console.error)\n  }\n\n  render () {\n    const { handleChangeName, handleChangeItems, handleSubmit } = this\n    const { createdInvId, inventory } = this.state\n\n    if (createdInvId) {\n      return <Redirect to={'/'} />\n    }\n\n    return (\n      <div className='row'>\n        <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n          <h3>Add New Inventory List</h3>\n          <InvForm\n            inventory={inventory}\n            handleChangeName={handleChangeName}\n            handleChangeItems={handleChangeItems}\n            handleSubmit={handleSubmit}\n            cancelPath=\"/\"\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default NewInventory\n","import axios from 'axios'\nimport React, { Component } from 'react'\nimport { Redirect, Link } from 'react-router-dom'\n\nimport apiUrl from '../../apiConfig'\n\nclass Inventory extends Component {\n  constructor (props) {\n    super(props)\n    // console.log(props.match.params.id)\n\n    this.state = {\n      inventory: [],\n      deleted: false,\n      user: props.user,\n      loading: true\n    }\n  }\n\n  // When the component is called/shows up, run this code\n  componentDidMount () {\n    const id = this.props.match.params.id\n    console.log('hi')\n\n    axios({\n      url: apiUrl + '/inventories/' + id,\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${this.state.user.token}`\n      }\n    })\n      .then((res) => {\n        console.log(res.data)\n        return res\n      })\n      .then((res) => this.setState({ loading: false, inventory: res.data.inventory }))\n      .catch(console.error)\n  }\n\n  // When any props or state change\n  componentDidUpdate () {\n    console.log('Updated!')\n  }\n\n  // When the component will leave the page/disappear\n  componentWillUnmount () {\n    console.log('Unmounting!')\n  }\n\n  handleClick = () => {\n    const id = this.props.match.params.id\n    console.log(id)\n\n    axios({\n      url: apiUrl + '/inventories/' + id,\n      method: 'DELETE',\n      headers: {\n        Authorization: `Bearer ${this.state.user.token}`\n      }\n    })\n      .then(() => this.setState({ deleted: true }))\n      .catch(console.error)\n  }\n\n  render () {\n    if (this.state.deleted) {\n      return <Redirect to='/' />\n    }\n    if (this.state.loading) {\n      return <h3>Loading...</h3>\n    }\n\n    const itemNameJSX = this.state.inventory.items.map((item) => (\n      <span key={item._id}>{item.name}</span>\n    ))\n\n    const itemQuantJSX = this.state.inventory.items.map((item) => (\n      <span key={item._id}>{item.quantity}</span>\n    ))\n\n    return (\n      <div className='row'>\n        <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n          <h2>{this.state.inventory.name}</h2>\n          <h5>{itemNameJSX}: {itemQuantJSX}</h5>\n          <button onClick={this.handleClick}>Delete</button>\n          <Link to={'/inventories/' + this.props.match.params.id + '/edit'}><button>Edit</button></Link>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Inventory\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios'\n\nimport apiUrl from '../../apiConfig'\nimport InvForm from './InvForm'\n\nclass InventoryEdit extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      name: '',\n      itemName: '',\n      itemQuant: '',\n      createdInvId: null,\n      user: props.user,\n      created: false\n    }\n  }\n\n  handleChangeName = event => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  handleChangeItems = event => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n\n    const id = this.props.match.params.id\n\n    axios({\n      url: apiUrl + '/inventories/' + id,\n      method: 'PATCH',\n      headers: {\n        Authorization: `Bearer ${this.state.user.token}`\n      },\n      data: {\n        inventory: {\n          name: this.state.name,\n          items: [{\n            name: this.state.itemName,\n            quantity: this.state.itemQuant,\n            owner: this.state.user._id\n          }]\n        }\n      }\n    })\n      .then((res) => {\n        console.log(res.data)\n        return res\n      })\n      .then(res => this.setState({ createdInvId: res.data.inventory._id }))\n      .then(this.setState({ created: true }))\n      .catch(console.error)\n  }\n\n  render () {\n    const { handleChangeName, handleChangeItems, handleSubmit } = this\n    const { createdInvId, inventory } = this.state\n\n    if (createdInvId) {\n      return <Redirect to={'/'} />\n    }\n    if (this.state.created) {\n      return <Redirect to={'/'} />\n    }\n\n    return (\n      <div className='row'>\n        <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n          <h3>Update Inventory List</h3>\n          <InvForm\n            inventory={inventory}\n            handleChangeName={handleChangeName}\n            handleChangeItems={handleChangeItems}\n            handleSubmit={handleSubmit}\n            cancelPath=\"/\"\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default InventoryEdit\n","/* eslint-disable no-tabs */\nimport React, { Component, Fragment } from 'react'\nimport { Route } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\nimport Inventories from './components/Inventory/Inventories'\nimport NewInventory from './components/Inventory/NewInventory'\nimport Inventory from './components/Inventory/Inventory'\nimport InventoryEdit from './components/Inventory/InventoryEdit.js'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      user: null,\n      msgAlerts: []\n    }\n  }\n\n  setUser = (user) => this.setState({ user })\n\n  clearUser = () => this.setState({ user: null })\n\n  deleteAlert = (id) => {\n    this.setState((state) => {\n      return { msgAlerts: state.msgAlerts.filter((msg) => msg.id !== id) }\n    })\n  }\n\n  msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    this.setState((state) => {\n      return {\n        msgAlerts: [...state.msgAlerts, { heading, message, variant, id }]\n      }\n    })\n  }\n\n  render () {\n    const { msgAlerts, user } = this.state\n\n    return (\n      <Fragment>\n\t      <Header user={user} />\n\t      {msgAlerts.map((msgAlert) => (\n          <AutoDismissAlert\n            key={msgAlert.id}\n            heading={msgAlert.heading}\n            variant={msgAlert.variant}\n            message={msgAlert.message}\n            id={msgAlert.id}\n            deleteAlert={this.deleteAlert}\n          />\n        ))}\n\t      <main className='container'>\n\t        <Route\n            path='/sign-up'\n            render={() => (\n              <SignUp msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <Route\n            path='/sign-in'\n            render={() => (\n              <SignIn msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/sign-out'\n            render={() => (\n              <SignOut\n                msgAlert={this.msgAlert}\n                clearUser={this.clearUser}\n                user={user}\n              />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/change-password'\n            render={() => (\n              <ChangePassword msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            exact\n            user={user}\n            path='/'\n            render={() => (\n              <Inventories user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/new-inventory'\n            render={() => (\n              <NewInventory user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            exact path='/inventories/:id'\n            user={user}\n            render={({ match }) => <Inventory match={match} user={user} />}\n          />\n          <AuthenticatedRoute\n            exact path='/inventories/:id/edit'\n            user={user}\n            render={({ match }) => <InventoryEdit match={match} user={user} />}\n          />\n        </main>\n      </Fragment>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}